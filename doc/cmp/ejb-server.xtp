<document>
  <header>
    <product>resin-ee</product>
    <resin-2.0>$ee/ejb-ref/ejb-server.xtp</resin-2.0>
    <title>EJBServer</title>
    <description>
      <p>The Resin-CMP EJB Server is implemented as a JNDI resource. Like any
        other resource, it is to be set up in <var>resin.conf</var> or <var>web.xml</var>.</p>
    </description>
  </header>

  <body>
    <summary/>

<s1 title="The EJBServer resource">

<p>The following stripped-down <var>web.xml</var> sets up Resin-CMP
so local clients can use java:comp/env/cmp to find the home
interfaces.

</p><p>Because the EJB server is a JNDI resource, it can be placed in any
JNDI resource context: &lt;web-app&gt;, &lt;host&gt;, or &lt;http-server&gt;.
An EJBServer in the &lt;host&gt; context, for example, will be shared
across all applications for that host.

</p><p>The following is a sample web.xml configuration.  More
details are available in:</p>

<ul>
<li><a href="db|index">Resin Database configuration</a>
</li><li><a href="resource|index">Resin JNDI configuration</a>
<!--
<li><a href="ejb|jndi">EJB JNDI configuration</a>
-->
</li></ul>

<p>EJBServer will automatically read the *.ejb files in WEB-INF and
load their defined beans.</p>

<example title="web.xml">
&lt;web-app&gt;
  &lt;!-- Database configuration --&gt;
  &lt;database&gt;
    &lt;jndi-name&gt;jdbc/test&lt;/jndi-name&gt;
    &lt;driver type="org.gjt.mm.mysql.Driver"&gt;
      &lt;url&gt;jdbc:mysql://localhost:3306/test&lt;/url&gt;
    &lt;/driver&gt;
  &lt;/database&gt;

  &lt;!-- Resin-CMP server configuration --&gt;
  &lt;ejb-server&gt;
    &lt;jndi-name&gt;java:comp/env/cmp&lt;/jndi-name&gt;
    &lt;data-source&gt;java:comp/env/jdbc/test&lt;/data-source&gt;
  &lt;/ejb-server&gt;
&lt;/web-app&gt;
</example>

<deftable title="EJBServer init-parameters">
<tr><th>Parameter</th><th>Meaning</th><th>Default
</th></tr><tr><td>auto-compile</td><td>If true, automatically generate the persistence and EJB code</td><td>true
</td></tr><tr><td>create-database-schema</td><td>If the entity beans do not yet exist in the data-source, create the tables</td><td>false
</td></tr><tr><td>data-source</td><td>The database's JNDI name</td><td>java:comp/env/jdbc/test
</td></tr><tr><td>distributed</td><td>Set true for multiple parallel servers</td><td>false
</td></tr><tr><td>ejb-config-dir</td><td>Directory to search for *.ejb files</td><td>WEB-INF
</td></tr><tr><td>entity-cache-size</td><td>How many entity beans are cached</td><td>8192
</td></tr><tr><td>entity-cache-timeout</td><td>How long a loaded CMP bean can be cached before reloading</td><td>Infinity
</td></tr><tr><td>resin-isolation</td><td>Whether updates should use <var>row-locking</var> (FOR UPDATE) or rely on the database's isolation <var>database</var></td><td>database
</td></tr><tr><td>jdbc-isolation</td><td>Selects the JDBC isolation for an update transaction</td><td>the database's default
<!--
<tr><td>lock-factory<td>Sets the default lock factory for entity beans<td>com.caucho.ejb.ExclusiveLockFactory
<tr><td>lock-timeout<td>How long a lock should wait before timing out (in milliseconds)<td>2000
-->
</td></tr><tr><td>transaction-timeout</td><td>How long a transaction should wait before timing out (in seconds)</td><td>60
</td></tr><tr><td>queue-connection-factory</td><td>Sets the JNDI name for the QueueConnectionFactory</td><td>none
</td></tr><tr><td>topic-connection-factory</td><td>Sets the JNDI name for the TopicConnectionFactory</td><td>none
</td></tr></deftable>

</s1>

<s1 title="Protocol Servlets">

<p>External protocols are generally implemented as servlets.
Only applications which expose an external interface will have
protocol servlets.</p>

<s2 title="Burlap">

<example>
&lt;!-- Burlap protocol configuration --&gt;
&lt;servlet-mapping&gt;
  &lt;url-pattern id='/burlap/*'/&gt;
  &lt;servlet-name id='com.caucho.burlap.EJBServlet'/&gt;
&lt;/servlet-mapping&gt;
</example>

</s2>

</s1>
  </body>
</document>