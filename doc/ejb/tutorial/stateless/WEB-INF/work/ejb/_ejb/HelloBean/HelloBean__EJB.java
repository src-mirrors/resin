/*
 * Generated by Resin Professional 3.0.s051107 (built Mon, 07 Nov 2005 04:11:17 PST)
 */

package _ejb.HelloBean;

import javax.ejb.*;
import com.caucho.vfs.*;
import com.caucho.ejb.xa.EjbTransactionManager;
import com.caucho.ejb.xa.TransactionContext;
import com.caucho.ejb.AbstractContext;
import com.caucho.ejb.session.StatelessServer;
import com.caucho.ejb.session.AbstractStatelessContext;
import com.caucho.ejb.session.StatelessHome;
import com.caucho.ejb.session.StatelessObject;

public class HelloBean__EJB extends com.caucho.ejb.session.AbstractStatelessContext {
  private static com.caucho.make.Dependency []_caucho_depend;

  public static void _caucho_init(com.caucho.vfs.Path path)
  {
    _caucho_depend = new com.caucho.make.Dependency[2];
    _caucho_depend[0] = new com.caucho.bytecode.JClassDependency("example.HelloBean", "");
    _caucho_depend[1] = new com.caucho.bytecode.JClassDependency("example.Hello", "");
  }

  public static boolean _caucho_is_modified()
  {
    if (com.caucho.util.CauchoSystem.getVersionId() != 0xa224d77e40a2178dL)
      return true;
    for (int i = _caucho_depend.length - 1; i >= 0; i--) {
      if (_caucho_depend[i].isModified())
        return true;
    }

    return false;
  }

  protected static final java.util.logging.Logger __caucho_log = com.caucho.log.Log.open(_ejb.HelloBean.HelloBean__EJB.class);

  com.caucho.ejb.xa.EjbTransactionManager _xaManager;
  private Bean []_freeBeanStack = new Bean[16];
  private int _freeBeanTop;

  public HelloBean__EJB(com.caucho.ejb.session.StatelessServer server)
  {
    super(server);
    _xaManager = server.getContainer().getTransactionManager();
  }

  Bean _ejb_begin(com.caucho.ejb.xa.TransactionContext trans)
    throws javax.ejb.EJBException
  {
    Bean bean;
    synchronized (this) {
      if (_freeBeanTop > 0) {
        bean = _freeBeanStack[--_freeBeanTop];
        return bean;
      }
    }

    try {
      bean = new Bean(this);
      return bean;
    } catch (Exception e) {
      throw com.caucho.ejb.EJBExceptionWrapper.create(e);
    }
  }

  void _ejb_free(Bean bean)
    throws javax.ejb.EJBException
  {
    if (bean == null)
      return;

    synchronized (this) {
      if (_freeBeanTop < _freeBeanStack.length) {
        _freeBeanStack[_freeBeanTop++] = bean;
        return;
      }
    }
  }

  public void destroy()
  {
    Bean ptr;
    Bean []freeBeanStack;
    int freeBeanTop;
    synchronized (this) {
      freeBeanStack = _freeBeanStack;
      freeBeanTop = _freeBeanTop;
      _freeBeanStack = null;
      _freeBeanTop = 0;
    }
  }

  public static class Bean extends example.HelloBean {

    protected final static java.util.logging.Logger __caucho_log = com.caucho.log.Log.open(example.HelloBean.class);
    private static int __caucho_dbg_id;
    private final String __caucho_id;
    _ejb.HelloBean.HelloBean__EJB _ejb_context;
    boolean _ejb_isActive;

    Bean(_ejb.HelloBean.HelloBean__EJB context)
    {
      synchronized (example.HelloBean.class) {
        __caucho_id = __caucho_dbg_id++ + "-example.HelloBean";
      }
      __caucho_log.fine(__caucho_id + ":new()");
      try {
        _ejb_context = context;

        context.getServer().initInstance(this);
      } catch (RuntimeException e) {
        throw e;
      } catch (Throwable e) {
        __caucho_log.log(java.util.logging.Level.FINE, e.toString(), e);
        throw com.caucho.ejb.EJBExceptionWrapper.create(e);
      }
    }
  }

  private Local _viewLocal;

  public EJBLocalObject getEJBLocalObject()
  {
    if (_viewLocal == null)
      _viewLocal = new Local(this);

    return _viewLocal;
  }

  public static class Local extends StatelessObject implements example.Hello {
    private final _ejb.HelloBean.HelloBean__EJB _context;
    private final EjbTransactionManager _xaManager;

    Local(_ejb.HelloBean.HelloBean__EJB context)
    {
      super(context.getStatelessServer());
      _context = context;
      _xaManager = _server.getTransactionManager();
    }

    private _ejb.HelloBean.HelloBean__EJB getContext()
    {
      return _context;
    }

    public java.lang.String toString()
    {
      Thread thread = Thread.currentThread();
      ClassLoader oldLoader = thread.getContextClassLoader();
      com.caucho.ejb.xa.TransactionContext trans = _xaManager.beginRequired();
      try {
        thread.setContextClassLoader(_context._server.getClassLoader());
        Bean ptr = _context._ejb_begin(trans);
        try {
          return ptr.toString();
        } catch (RuntimeException e) {
          ptr = null;
          throw e;
        } finally {
          _context._ejb_free(ptr);
        }
      } catch (RuntimeException e) {
        throw trans.setRollbackOnly(e);
      } finally {
        thread.setContextClassLoader(oldLoader);
        trans.commit();
      }
    }

    public java.lang.String hello()
    {
      Thread thread = Thread.currentThread();
      ClassLoader oldLoader = thread.getContextClassLoader();
      com.caucho.ejb.xa.TransactionContext trans = _xaManager.beginSupports();
      try {
        thread.setContextClassLoader(_context._server.getClassLoader());
        Bean ptr = _context._ejb_begin(trans);
        try {
          return ptr.hello();
        } catch (RuntimeException e) {
          ptr = null;
          throw e;
        } finally {
          _context._ejb_free(ptr);
        }
      } catch (RuntimeException e) {
        throw trans.setRollbackOnly(e);
      } finally {
        thread.setContextClassLoader(oldLoader);
        trans.commit();
      }
    }
  }
}
