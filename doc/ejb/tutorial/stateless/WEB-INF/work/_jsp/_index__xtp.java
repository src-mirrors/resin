/*
 * JSP generated by Resin Professional 3.0.s051107 (built Mon, 07 Nov 2005 04:11:17 PST)
 */

package _jsp;
import javax.servlet.*;
import javax.servlet.jsp.*;
import javax.servlet.http.*;

public class _index__xtp extends com.caucho.jsp.JavaPage{
  private boolean _caucho_isDead;
  
  public void
  _jspService(javax.servlet.http.HttpServletRequest request,
              javax.servlet.http.HttpServletResponse response)
    throws java.io.IOException, javax.servlet.ServletException
  {
    com.caucho.server.webapp.Application _jsp_application = _caucho_getApplication();
    javax.servlet.ServletContext application = _jsp_application;
    com.caucho.jsp.PageContextImpl pageContext = com.caucho.jsp.QJspFactory.allocatePageContext(this, _jsp_application, request, response, null, null, 8192, true);
    javax.servlet.jsp.JspWriter out = pageContext.getOut();
    javax.servlet.ServletConfig config = getServletConfig();
    javax.servlet.Servlet page = this;
    response.setContentType("text/html; charset=utf-8");
    request.setCharacterEncoding("UTF-8");
    try {
      out.write(_jsp_string0, 0, _jsp_string0.length);
    } catch (java.lang.Throwable _jsp_e) {
      pageContext.handlePageException(_jsp_e);
    } finally {
      com.caucho.jsp.QJspFactory.freePageContext(pageContext);
    }
  }

  private java.util.ArrayList _caucho_depends = new java.util.ArrayList();

  public java.util.ArrayList _caucho_getDependList()
  {
    return _caucho_depends;
  }

  public void _caucho_addDepend(com.caucho.make.PersistentDependency depend)
  {
    super._caucho_addDepend(depend);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  public boolean _caucho_isModified()
  {
    if (_caucho_isDead)
      return true;
    if (com.caucho.util.CauchoSystem.getVersionId() != -6763043803153426547L)
      return true;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      com.caucho.make.Dependency depend;
      depend = (com.caucho.make.Dependency) _caucho_depends.get(i);
      if (depend.isModified())
        return true;
    }
    return false;
  }

  public long _caucho_lastModified()
  {
    long lastModified = 0;
    for (int i = _caucho_depends.size() - 1; i >= 0; i--) {
      Object oDepend = _caucho_depends.get(i);
      if (oDepend instanceof com.caucho.vfs.Depend) {
        com.caucho.vfs.Depend depend = (com.caucho.vfs.Depend) oDepend;
        if (lastModified < depend.getLastModified())
          lastModified = depend.getLastModified();
      }
    }

    return lastModified;
  }

  public void destroy()
  {
      _caucho_isDead = true;
      super.destroy();
  }

  public void init(com.caucho.vfs.Path appDir)
    throws javax.servlet.ServletException
  {
    com.caucho.vfs.Path resinHome = com.caucho.util.CauchoSystem.getResinHome();
    com.caucho.vfs.MergePath mergePath = new com.caucho.vfs.MergePath();
    mergePath.addMergePath(appDir);
    mergePath.addMergePath(resinHome);
    com.caucho.loader.DynamicClassLoader loader;
    loader = (com.caucho.loader.DynamicClassLoader) getClass().getClassLoader();
    String resourcePath = loader.getResourcePathSpecificFirst();
    mergePath.addClassPath(resourcePath);
    com.caucho.vfs.Depend depend;
    depend = new com.caucho.vfs.Depend(appDir.lookup("WEB-INF/work/_jsp/_index__xtp.jsp"), 4856887159895137594L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/WEB-INF/xsl/default.xsl"), -3278680048207452417L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/WEB-INF/xsl/caucho/defaultcopy.xsl"), -5878043989154613634L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/WEB-INF/xsl/caucho/nodeinfo.xsl"), -1541064334727024826L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/WEB-INF/xsl/caucho/newstyle.xsl"), 4150355118170658851L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/WEB-INF/xsl/caucho/fun.xsl"), 2098347485865802837L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/WEB-INF/xsl/caucho/toc.xsl"), 6259177699393430282L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/WEB-INF/xsl/caucho/href.xsl"), -7728878538581356317L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/WEB-INF/xsl/caucho/viewfile.xsl"), -3953079722820763148L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/WEB-INF/xsl/new_doc_header.xsl"), 104910359140568886L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(appDir.lookup("index.xtp"), -2360644640041566196L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/href-map.xml"), -989486145457140487L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/ejb3/tutorial/toc.xml"), 1937427451394060038L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/ejb3/toc.xml"), 4992223847064523629L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
    depend = new com.caucho.vfs.Depend(mergePath.lookup("/Users/ferg/ws/resin/doc/toc.xml"), -970643104451404904L, false);
    com.caucho.jsp.JavaPage.addDepend(_caucho_depends, depend);
  }

  private final static char []_jsp_string0;
  static {
    _jsp_string0 = "<html>\n<head>\n  <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\">\n  <link rel=\"STYLESHEET\" type=\"text/css\" href=\"/resin-doc/css/default.css\">\n  <title>Local Stateless Session Hello</title>\n  <meta name=\"description\" content=\"Stateless sessions make database queries and updates robust by setting transaction boundaries at each business method. This stateless session bean example annotates a single business method with a SUPPORTS transaction attribute, marking the method as a read-only transaction boundary.\">\n  <meta name=\"keywords\" content=\"j2ee caucho resin-ee index\">\n</head>\n<body bgcolor=\"white\" leftmargin=\"0\">\n<table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" width=\"100%\" summary=\"\">\n<tr><td width=\"2\"><img alt=\"\" width=\"2\" height=\"1\" src=\"/resin-doc/images/pixel.gif\"></td><td width=\"150\"><img width=\"150\" height=\"63\" src=\"/resin-doc/images/caucho-white.jpg\"></td><td width=\"10\"><img alt=\"\" width=\"10\" height=\"1\" src=\"/resin-doc/images/pixel.gif\"></td><td width=\"100%\">\n  <!-- top navigation -->\n  <table width=\"100%\" cellspacing=\"0\" cellpadding=\"0\" border=\"0\" summary=\"\">\n  <tr class=\"toptitle\"><td rowspan=\"2\" width=\"90%\" background=\"/resin-doc/images/hbleed.gif\"><font class=\"toptitle\" size=\"+3\">\n          &nbsp;\n          Local Stateless Session Hello</font></td></tr>\n  </table></td></tr>\n<tr><td colspan=\"4\"><img alt=\"\" width=\"1\" height=\"5\" src=\"/resin-doc/images/pixel.gif\"></td></tr>\n<tr><td colspan=\"2\" background=\"/resin-doc/images/left_background.gif\"><img alt=\"\" width=\"1\" height=\"20\" src=\"/resin-doc/images/pixel.gif\"></td><td colspan=\"2\"><img alt=\"\" width=\"1\" height=\"20\" src=\"/resin-doc/images/pixel.gif\"></td></tr>\n<tr valign=\"top\"><td bgcolor=\"#b9cef7\"></td><td bgcolor=\"#b9cef7\">\n  <table cellspacing=\"0\" cellpadding=\"2\" border=\"0\" width=\"100%\">\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/index.xtp\">Resin 3.0\n</a></td></tr>\n  <tr><td>\n    <hr></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/features/index.xtp\">Features\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/install/index.xtp\">Installation\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/config/index.xtp\">Configuration\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/webapp/index.xtp\">Web Applications\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/ioc/index.xtp\">IOC/AOP\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/resource/index.xtp\">Resources\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/jsp/index.xtp\">JSP\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/servlet/index.xtp\">Servlets and Filters\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/portlet/index.xtp\">Portlets\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/db/index.xtp\">Databases\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/jmx/index.xtp\">Admin (JMX)\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/cmp/index.xtp\">CMP\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/ejb/index.xtp\">EJB\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/amber/index.xtp\">Amber\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/ejb3/index.xtp\">EJB 3.0\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/security/index.xtp\">Security\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/xml/index.xtp\">XML and XSLT\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/xtp/index.xtp\">XTP\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/jms/index.xtp\">JMS\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/performance/index.xtp\">Performance\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/protocols/index.xtp\">Protocols\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/thirdparty/index.xtp\">Third-party\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/troubleshoot/index.xtp\">Troubleshooting/FAQ\n</a></td></tr>\n  <tr><td>\n    <hr></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/ejb3/bean-ann.xtp\">Bean Annotation\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/ejb3/cmp-table.xtp\">Table\n</a></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/ejb3/tutorial/index.xtp\">Tutorials\n</a></td></tr>\n  <tr><td>\n    <hr></td></tr>\n  <tr><td><a class=\"leftnav\" href=\"/resin-doc/ejb3/tutorial/stateless/index.xtp\">Stateless Session\n</a></td></tr>\n  </table></td><td width=\"10\"><img alt=\"\" width=\"10\" height=\"1\" src=\"/resin-doc/images/pixel.gif\"></td><td>\n  <table border=\"0\" cellspacing=\"0\" width=\"100%\">\n  <tr><td><a href=\"/resin-doc/ejb3/tutorial/index.xtp\">Tutorials</a></td><td width=\"100%\">\n    <center><a href=\"/resin-doc/ejb3/tutorial/index.xtp\">Tutorials</a></center></td><td align=\"right\"><a href=\"/resin-doc/security/index.xtp\">Security</a></td></tr>\n  </table>\n  <hr>Find this tutorial in: <code>/Users/ferg/ws/resin/doc/ejb3/tutorial/stateless</code>\n  <br><a href=\"stateless\">Try the Tutorial</a><hr>\n  <p>Stateless sessions make database queries and updates robust by\nsetting transaction boundaries at each business method.\nThis <span class=\"meta\">stateless session</span> bean example annotates a single\nbusiness method with a SUPPORTS transaction attribute, marking the\nmethod as a read-only transaction boundary.</p>\n  <p>See also:</p>\n  <ul>\n  <li>The <a href=\"../resin-xa/index.xtp\">Resin Transaction</a> example for a more detailed description of method transaction enhancement.\n  \n  <li>The <a href=\"../cmp-xa/index.xtp\">CMP Transaction</a> example for a traditional session bean pattern.\n  \n  <li>The <a class=\"doc\" href=\"/resin-doc/ejb3/bean-ann.xtp#@TransactionAttribute\">@TransactionAttribute</a>  reference.\n\n  </ul>\n  <p>\n  <center>\n    <table width=\"90%\" class=\"toc\" border=\"3\">\n    <tr><td>\n      <ol>\n        <li><a href=\"#Files-in-this-tutorial\">Files in this tutorial</a>\n        <li><a href=\"#Local-Interface\">Local Interface</a>\n        <li><a href=\"#Bean-Implementation\">Bean Implementation</a><ol>\n            <li><a href=\"#@Stateless\">@Stateless</a>\n            <li><a href=\"#@Inject\">@Inject</a>\n            <li><a href=\"#Alternate-Dependency-Injection\">Alternate Dependency Injection</a>\n            <li><a href=\"#@TransactionAttribute\">@TransactionAttribute</a>\n          </ol>\n        <li><a href=\"#Configuring-the-Resin-EJB-server\">Configuring the Resin EJB server</a>\n        <li><a href=\"#Client\">Client</a><ol>\n            <li><a href=\"#@EJB\">@EJB</a>\n          </ol>\n      </ol></td></tr>\n    </table>\n  </center>\n  <p>\n  <p>A Hello, World example for EJB 3.0 is much simpler than for earlier\nversions of EJB.  To implement the EJB you need to implement:</p>\n  <ul>\n  <li>A local interface\n\n  <li>The bean implementation\n\n  </ul>\n  <p>To configure Resin to be a server for the EJB you need to:</p>\n  <ul>\n  <li>Configure the ejb-server\n\n  <li>Configure the client\n\n  </ul>\n  <p>In this tutorial, a simple \"Hello\" EJB is created and\ndeployed within Resin.</p>\n  <p>\n  <table border=\"0\" cellpadding=\"5\" cellspacing=\"0\" width=\"100%\">\n  <tr class=\"section\"><td><font size=\"+2\"><b><a name=\"Files-in-this-tutorial\">Files in this tutorial</a></b></font></td></tr>\n  </table>\n  <p>\n  <table width=\"90%\" cellpadding=\"2\" cellspacing=\"0\" class=\"deftable\" border=\"\">\n  <tr><td><code class=\"viewfile\"><a class=\"viewfile\" href=\"/resin-doc/viewfile/?contextpath=%2Fresin-doc%2Fejb3%2Ftutorial%2Fstateless&servletpath=%2Findex.xtp&file=WEB-INF%2Fweb.xml&re-marker=&re-start=&re-end=#code-highlight\">WEB-INF/web.xml</a></code>\n</td><td>web.xml configuration\n</td></tr>\n  <tr><td><code class=\"viewfile\"><a class=\"viewfile\" href=\"/resin-doc/viewfile/?contextpath=%2Fresin-doc%2Fejb3%2Ftutorial%2Fstateless&servletpath=%2Findex.xtp&file=WEB-INF%2Fclasses%2Fexample%2FHello.java&re-marker=&re-start=&re-end=#code-highlight\">WEB-INF/classes/example/Hello.java</a></code>\n</td><td>The local interface for the stateless session bean\n</td></tr>\n  <tr><td><code class=\"viewfile\"><a class=\"viewfile\" href=\"/resin-doc/viewfile/?contextpath=%2Fresin-doc%2Fejb3%2Ftutorial%2Fstateless&servletpath=%2Findex.xtp&file=WEB-INF%2Fclasses%2Fexample%2FHelloBean.java&re-marker=&re-start=&re-end=#code-highlight\">WEB-INF/classes/example/HelloBean.java</a></code>\n</td><td>The implementation for the stateless session bean\n</td></tr>\n  <tr><td><code class=\"viewfile\"><a class=\"viewfile\" href=\"/resin-doc/viewfile/?contextpath=%2Fresin-doc%2Fejb3%2Ftutorial%2Fstateless&servletpath=%2Findex.xtp&file=WEB-INF%2Fclasses%2Fexample%2FHelloServlet.java&re-marker=&re-start=&re-end=#code-highlight\">WEB-INF/classes/example/HelloServlet.java</a></code>\n</td><td>The client for the stateless session bean\n</td></tr>\n  </table>\n  <p>\n  <table border=\"0\" cellpadding=\"5\" cellspacing=\"0\" width=\"100%\">\n  <tr class=\"section\"><td><font size=\"+2\"><b><a name=\"Local-Interface\">Local Interface</a></b></font></td></tr>\n  </table>\n  <p>The remote interface defines the client view of the bean.\nIt declares all the business methods.  Our\nonly business method is the <tt>hello</tt> method.</p>\n  <p>\n  <table class=\"egpad\" cellspacing=\"0\" width=\"90%\">\n  <caption><font size=\"+1\">Hello.java<br>See it in: <code class=\"viewfile\"><a class=\"viewfile\" href=\"/resin-doc/viewfile/?contextpath=%2Fresin-doc%2Fejb3%2Ftutorial%2Fstateless&servletpath=%2Findex.xtp&file=WEB-INF%2Fclasses%2Fexample%2FHello.java&re-marker=&re-start=&re-end=#code-highlight\">WEB-INF/classes/example/Hello.java</a></code></font>\n  </caption>\n  <tr><td class=\"example\" bgcolor=\"#ffeecc\">\n    <pre>\npackage example;\n\npublic interface Hello {\n  public String hello();\n}\n</pre></td></tr>\n  </table>\n  <p>\n  <table border=\"0\" cellpadding=\"5\" cellspacing=\"0\" width=\"100%\">\n  <tr class=\"section\"><td><font size=\"+2\"><b><a name=\"Bean-Implementation\">Bean Implementation</a></b></font></td></tr>\n  </table>\n  <p>The second class for EJBs is the bean implementation class.  It implements\nthe functionality provided by the remote interface.</p>\n  <p>\n  <table class=\"egpad\" cellspacing=\"0\" width=\"90%\">\n  <caption><font size=\"+1\">HelloBean.java<br>See it in: <code class=\"viewfile\"><a class=\"viewfile\" href=\"/resin-doc/viewfile/?contextpath=%2Fresin-doc%2Fejb3%2Ftutorial%2Fstateless&servletpath=%2Findex.xtp&file=WEB-INF%2Fclasses%2Fexample%2FHelloBean.java&re-marker=&re-start=&re-end=#code-highlight\">WEB-INF/classes/example/HelloBean.java</a></code></font>\n  </caption>\n  <tr><td class=\"example\" bgcolor=\"#ffeecc\">\n    <pre>\npackage example;\n\nimport static javax.ejb.TransactionAttributeType.SUPPORTS;\n\n@javax.ejb.Stateless\npublic class HelloBean implements Hello {\n  private String _greeting = \"Default Hello\";\n\n  <a class=\"doc\" href=\"/resin-doc/ejb3/inject.xtp#@Inject\">@javax.ejb.Inject</a> \n  public void setGreeting(String greeting)\n  {\n    _greeting = greeting;\n  }\n\n  @javax.ejb.TransactionAttribute(SUPPORTS)\n  public String hello()\n  {\n    return _greeting;\n  }\n}\n</pre></td></tr>\n  </table>\n  <h3><a name=\"@Stateless\">@Stateless</a></h3>\n  <p>The @Stateless annotation marks the bean as a stateless session\nbean.  Resin will create a stub implementing <tt>Hello</tt> and\nstore it in JNDI at \"java:comp/env/ejb/HelloBean\".</p>\n  <p>The @Stateless annotation can have an optional <tt>name</tt>\nvalue which overrides the default name of \"HelloBean\".</p>\n  <h3><a name=\"@Inject\">@Inject</a></h3>\n  <p>The <a class=\"doc\" href=\"/resin-doc/ejb3/inject.xtp#@Inject\">@javax.ejb.Inject</a> \nannotation tells Resin to lookup the greeting from JNDI when the\nsession bean is created.  The JNDI name will be\njava:comp/env/greeting.</p>\n  <p>In this example, the greeting is configured with an &lt;env-entry>\nin the web.xml.</p>\n  <h3><a name=\"Alternate-Dependency-Injection\">Alternate Dependency Injection</a></h3>\n  <p>The EJB 3.0 draft spec's dependency injection is somewhat\ninflexible since the greeting is required to be in JNDI.  Resin\noffers a more flexible dependency injection configuration based\non the configuration file.  By setting the value in the configuration\nfile, Resin's alternate dependency injection adds more flexibility and\nsome clarity.</p>\n  <p>\n  <table class=\"egpad\" cellspacing=\"0\" width=\"90%\">\n  <tr><td class=\"example\" bgcolor=\"#ffeecc\">\n    <pre>\n&lt;ejb-server jndi-name=\"java:comp/env/ejb\">\n  &lt;bean type=\"qa.TestBean\">\n    &lt;init greeting=\"Hello, World from web.xml\"/>\n  &lt;/bean>\n&lt;/ejb-server>\n</pre></td></tr>\n  </table>\n  <h3><a name=\"@TransactionAttribute\">@TransactionAttribute</a></h3>\n  <p>Managing transactions is the primary purpose of stateless\nsession beans.  Transactions are a more powerful version of\na <tt>synchronized</tt> lock used to protect database integrity.\n<a class=\"doc\" href=\"/resin-doc/ejb3/bean-ann.xtp#@TransactionAttribute\">@TransactionAttribute</a> \nmarks the transaction boundary for each business method.</p>\n  <p>\n  <table class=\"egpad\" cellspacing=\"0\" width=\"90%\">\n  <tr><td class=\"example\" bgcolor=\"#ffeecc\">\n    <pre>\n@javax.ejb.TransactionAttribute(SUPPORTS)\npublic String hello()\n</pre></td></tr>\n  </table>\n  <p>The <tt>hello()</tt> business method uses SUPPORTS because it's\na read-only method.  It doesn't need to start a new transaction on its\nown, but will participate in any transaction that already exists.</p>\n  <p>The REQUIRED transaction value starts up a new transaction if none\nalready exists.  It's used when updating database values.</p>\n  <p>\n  <table width=\"90%\" cellpadding=\"2\" cellspacing=\"0\" class=\"deftable\" border=\"\">\n  <tr><th>TransactionAttribute</th><th>meaning\n</th></tr>\n  <tr><td>REQUIRED</td><td>Start a new transaction if necessary\n</td></tr>\n  <tr><td>SUPPORTS</td><td>Don't start a new transaction, but use one if it\nexists\n</td></tr>\n  </table>\n  <p>\n  <table border=\"0\" cellpadding=\"5\" cellspacing=\"0\" width=\"100%\">\n  <tr class=\"section\"><td><font size=\"+2\"><b><a name=\"Configuring-the-Resin-EJB-server\">Configuring the Resin EJB server</a></b></font></td></tr>\n  </table>\n  <p><tt>&lt;ejb-server&gt;</tt> configure the Resin EJB server.\nTypically it configures the EJB root using jndi-name and configures\na number of EJB classes using &lt;bean>.  The &lt;bean> entry will\nlook at the bean's annotations to enhance the class.</p>\n  <p>\n  <table class=\"egpad\" cellspacing=\"0\" width=\"90%\">\n  <caption><font size=\"+1\">ejb-server in web.xml<br>See it in: <code class=\"viewfile\"><a class=\"viewfile\" href=\"/resin-doc/viewfile/?contextpath=%2Fresin-doc%2Fejb3%2Ftutorial%2Fstateless&servletpath=%2Findex.xtp&file=WEB-INF%2Fweb.xml&re-marker=&re-start=&re-end=#code-highlight\">WEB-INF/web.xml</a></code></font>\n  </caption>\n  <tr><td class=\"example\" bgcolor=\"#ffeecc\">\n    <pre>\n&lt;web-app xmlns=\"http://caucho.com/ns/resin\"&gt;\n\n  ...\n  &lt;env-entry env-entry-name=\"greeting\"\n             env-entry-type=\"java.lang.String\"\n             env-entry-value=\"Hello, World.\"/>\n\n  &lt;ejb-server jndi-name=\"java:comp/env/ejb\">\n    &lt;bean type=\"qa.TestBean\"/>\n  &lt;/ejb-server>\n    \n  ...\n\n&lt;/web-app&gt;\n</pre></td></tr>\n  </table>\n  <p>The &lt;bean> can optionally configure the bean instances with an\n&lt;init> tag as described in the alternate dependency injection section.</p>\n  <p>\n  <table border=\"0\" cellpadding=\"5\" cellspacing=\"0\" width=\"100%\">\n  <tr class=\"section\"><td><font size=\"+2\"><b><a name=\"Client\">Client</a></b></font></td></tr>\n  </table>\n  <p>\n  <table class=\"egpad\" cellspacing=\"0\" width=\"90%\">\n  <caption><font size=\"+1\">See it in: <code class=\"viewfile\"><a class=\"viewfile\" href=\"/resin-doc/viewfile/?contextpath=%2Fresin-doc%2Fejb3%2Ftutorial%2Fstateless&servletpath=%2Findex.xtp&file=WEB-INF%2Fclasses%2Fexample%2FHelloServlet.java&re-marker=&re-start=&re-end=#code-highlight\">WEB-INF/classes/example/HelloServlet.java</a></code></font>\n  </caption>\n  <tr><td class=\"example\" bgcolor=\"#ffeecc\">\n    <pre>\npublic class HelloServlet extends GenericServlet {\n  private Hello _hello;\n\n  @javax.ejb.EJB\n  public void setHello(Hello hello)\n  {\n    _hello = hello;\n  }\n\n  public void service(HttpServletRequest req, HttpServletResponse res)\n    throws IOException, ServletException\n  {\n    PrintWriter out = res.getWriter();\n    \n    out.println(_hello.hello());\n  }\n}\n</pre></td></tr>\n  </table>\n  <h3><a name=\"@EJB\">@EJB</a></h3>\n  <p>The <a class=\"doc\" href=\"/resin-doc/ejb3/cmp-inject.xtp#@EJB\">@EJB</a>  annotation tells\nResin to lookup the session bean in JNDI with name\n\"java:comp/env/ejb/HelloBean\".</p>\n  <p>The servlet could also lookup the Hello bean with JNDI in the\n<tt>init()</tt> method or use an &lt;init> configuration in the\nweb.xml:\n\n    <p>\n    <table class=\"egpad\" cellspacing=\"0\" width=\"90%\">\n    <caption><font size=\"+1\">alternative configuration</font>\n    </caption>\n    <tr><td class=\"example\" bgcolor=\"#ffeecc\">\n      <pre>\n&lt;servlet servlet-name=\"hello\" servlet-class=\"example.HelloServlet\">\n  &lt;init hello=\"\\${jndi:lookup('java:comp/env/ejb/HelloBean')}\"/>\n&lt;/servlet>\n</pre></td></tr>\n    </table>\n  </p>\n  <p><a href=\"stateless\">Try the Tutorial</a></p>\n  <hr>\n  <table border=\"0\" cellspacing=\"0\" width=\"100%\">\n  <tr><td><a href=\"/resin-doc/ejb3/tutorial/index.xtp\">Tutorials</a></td><td width=\"100%\">\n    <center><a href=\"/resin-doc/ejb3/tutorial/index.xtp\">Tutorials</a></center></td><td align=\"right\"><a href=\"/resin-doc/security/index.xtp\">Security</a></td></tr>\n  </table>\n  <table border=\"0\" cellspacing=\"0\" width=\"100%\">\n  <tr><td><em><small>Copyright &copy; 1998-2005 Caucho Technology, Inc. All rights reserved.<br>\nResin<sup><font size=\"-1\">\u00ae</font></sup> is a registered trademark,\nand HardCore<sup>tm</sup> and Quercus<sup>tm</sup> are trademarks of Caucho Technology, Inc.</small></em></td><td align=\"right\"><img width=\"96\" height=\"32\" src=\"/resin-doc/images/logo.gif\"></td></tr>\n  </table></td></tr>\n</table>\n</body>\n</html>\n".toCharArray();
  }
}
