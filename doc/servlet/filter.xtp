<document>
  <header>
    <product>resin</product>
    <resin-2.0>$resin/ref/filter-config.xtp</resin-2.0>
    <title>Filters</title>
  </header>

  <body>
    <summary/>
<p>Filter configuration follows the Servlet 2.3 deployment descriptors.
Creating and using a filter has three steps:</p>

<ol>
<li>Create a filter class which extends javax.servlet.Filter
</li><li>Use <a href="#filter">&lt;filter&gt;</a> in the web.xml to configure the filter.
</li><li>Use <a href="#filter-mapping">&lt;filter-mapping&gt;</a> to select URLs and servlets for the filter.
</li></ol>

<website>
<p>Some other pages which discuss filters include:</p>

<ul>
<li>Resin's <a href="filter-library.xtp">filter library</a>
</li></ul>
</website>


<s1 title="Filter Configuration">

<s2 title="filter" version="Servlet 2.3" type="defun">
<p>Defines a filter alias for later mapping.</p>

<deftable>
<tr><th>Tag</th><th>Meaning
</th></tr><tr><td>filter-name</td><td>The filter's name (alias)
</td></tr><tr><td>filter-class</td><td>The filter's class (defaults to servlet-name)
</td></tr><tr><td>init-param</td><td>Initialization parameters
</td></tr></deftable>

<p>The following example defines a filter alias 'image'</p>
<example>
&lt;web-app id='/'&gt;

&lt;filter-mapping url-pattern='/images/*'
                 filter-name='image'/&gt;

&lt;filter filter-name='image'
         filter-class='test.MyImage'&gt;
  &lt;init-param title='Hello, World'/&gt;
&lt;/filter&gt;

&lt;/web-app&gt;
</example>
</s2>

<s2 title="filter-name" version="Servlet 2.3" type="defun">
<p>Alias of the filter.</p>
</s2>

<s2 title="filter-class" version="Servlet 2.3" type="defun">
<p>Class of the filter.  The CLASSPATH for filters includes
the WEB-INF/classes directory and all jars in the WEB-INF/lib directory.
</p>
</s2>

<s2 title="init-param" version="Servlet 2.3" type="defun">
<p>Initializes filter variables.  <code>filter-param</code>
defines initial values for <code>getFilterConfig().getInitParameter("foo")</code>.
</p>

<p>The full Servlet 2.3 syntax for init-param is supported and
allows a simple shortcut</p>
<example>
&lt;web-app id='/'&gt;

&lt;filter filter-name='test.HelloWorld'&gt;
  &lt;init-param foo='bar'/&gt;

  &lt;init-param&gt;
    &lt;param-name&gt;baz&lt;/param-name&gt;
    &lt;param-value&gt;value&lt;/param-value&gt;
  &lt;/init-param&gt;
&lt;/filter&gt;

&lt;/web-app&gt;
</example>
</s2>

<s2 title="filter-mapping" version="Servlet 2.3" type="defun">
<p>Maps url patterns to filters.  <var>filter-mapping</var> has two
children, <var>url-pattern</var> and <var>filter-name</var>.
<var>url-pattern</var> selects the urls which should execute the filter.
</p>

<p><code>filter-name</code> can either specify a servlet class directly or it
can specify a servlet alias defined by <code>filter</code>.
</p>

<deftable>
<tr><th>Configuration</th><th>Description
</th></tr><tr><td>url-pattern</td><td>A pattern matching the url:
<var>/foo/*</var>, <var>/foo</var>, or <var>*.foo</var>
</td></tr><tr><td>url-regexp</td><td>A regular expression matching the url
</td></tr><tr><td>servlet-name</td><td>A servlet name to match.
</td></tr><tr><td>filter-name</td><td>The filter name
</td></tr><tr><td>filter-class</td><td>The filter class
</td></tr><tr><td>init-param</td><td>Initialization parameters
</td></tr></deftable>

<example>
&lt;caucho.com&gt;
&lt;web-app id='/'&gt;

&lt;servlet servlet-name='hello'
         servlet-class='test.HelloWorld'/&gt;

&lt;servlet-mapping url-pattern='/hello'
                 servlet-name='hello'/&gt;

&lt;filter filter-name='test-filter'
        filter-class='test.MyFilter'/&gt;

&lt;filter-mapping url-pattern='/hello/*'
                 filter-name='test-filter'/&gt;

&lt;filter-mapping servlet-name='hello'
                 filter-name='test.SecondFilter'/&gt;

&lt;/web-app&gt;
</example>
</s2>

</s1>
  </body>
</document>