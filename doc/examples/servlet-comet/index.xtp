<document>
  <header>
    <product>resin</product>
    <title>Comet Servlet</title>
    <description>
<p>Resin's Comet servlet API enables streaming communication such
as AJAX dynamic updates for browser/JavaScript applications.  The API
encapsulates of the threading and communications issues between the
request threads and the rest of the application.
</p>
</description>
    <type>tutorial</type>
    <tutorial-startpage>comet.html</tutorial-startpage>
  </header>

  <body>

<s1>

<p>Resin's Comet API lets server application push new data to
the client as it becomes available.  Administration and monitoring
applications need to continually update the client when new information
becomes available to the server.
</p>

<figure src="cometcomm.png"/>

<p>The architecture in the picture uses two HTTP streams to the server
application, one for normal client-server requests, and a second
unidirectional stream to send updates from the server to the client.
In this example, we're using a browser with JavaScript, but the same
architecture applies to a more sophisticated Flash monitoring
application sending Hessian packets to update the monitoring display.</p>

</s1>

<s1 title="Files in this tutorial">
<deftable>
<tr>
  <td><viewfile-link file="WEB-INF/resin-web.xml"/></td>
  <td>resin-web.xml configuration</td>
</tr>
<tr>
  <td><viewfile-link file="comet.html"/></td>
  <td>Main HTML page linking comet servlet.</td>
</tr>
<tr>
  <td><viewfile-link file="WEB-INF/classes/example/TestComet.java"/></td>
  <td>The Comet servlet.</td>
</tr>
<tr>
  <td><viewfile-link file="WEB-INF/classes/example/CometItem.java"/></td>
  <td>The Comet controller.</td>
</tr>
</deftable>
</s1>

<s1 title="example code">

<example title="example/TestComet.java">
package example;

import java.io.*;

import javax.servlet.http.*;
import javax.servlet.*;

import com.caucho.servlets.comet.AbstractCometServlet;
import com.caucho.servlets.comet.CometController;

public class TestComet extends AbstractCometServlet {
  @Override
  public boolean service(HttpServletRequest req,
                         HttpServletResponse res,
                         CometController controller)
    throws IOException, ServletException
  {
    res.setContentType("text/html");

    addCometItem(controller);

    return true;
  }
  
  @Override
  public boolean resume(HttpServletRequest req,
                         HttpServletResponse res,
                         CometController controller)
    throws IOException, ServletException
  {
    PrintWriter out = res.getWriter();

    String count = req.getAttribute("comet.count");

    out.println("&lt;script type='text/javascript'>");
    out.println("window.parent.comet_update(" + count + ");");
    out.println("&lt;/script>");

    return true;
  }
}
</example>

</s1>

<s1 title="state">

<figure src="cometstate.png"/>

</s1>

<s1 title="AbstractCometServlet">

<p>See <a href="http://caucho.com/resin-javadoc/com/caucho/servlets/comet/AbstractCometServlet.html">AbstractCometServlet JavaDoc</a>.</p>

<example title="com.caucho.servlets.comet.AbstractCometServlet">
package com.caucho.servlets.comet;

abstract public class AbstractCometServlet extends GenericServlet
{
  abstract public boolean service(HttpServletRequest request,
				  HttpServletResponse response,
				  CometController controller)
    throws IOException, ServletException;

  public boolean resume(HttpServletRequest request,
			HttpServletResponse response,
			CometController controller)
    throws IOException, ServletException
  {
    return false;
  }
}
</example>

</s1>

<s1 title="CometController">

<p>See <a href="http://caucho.com/resin-javadoc/com/caucho/servlets/comet/CometController.html">CometController JavaDoc</a>.</p>

<example title="com.caucho.servlets.comet.CometController">
package com.caucho.servlets.comet;

public class CometController
{
  public boolean isActive();

  public Object getAttribute(String name);

  public void setAttribute(String name, Object value);

  public void removeAttribute(String name);

  public void wake();

  public void close();
}
</example>

</s1>
  </body>
</document>
