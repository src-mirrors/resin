<document>
  <header>
    <product>resin</product>
    <resin-2.0>$resin/ref/ejb-orion.xtp</resin-2.0>
    <title>Orion EJB</title>
  </header>

  <body>
    <summary/>
<s1 title="Orion EJB">

<p>
From Luciano Montebove:
</p>

<p>To use Resin as an EJB client with Orion follow these steps:</p>

<ol>
<li>Under Orion do nothing :)

</li><li>In Resin add orion.jar, ejb.jar, mail.jar (from orion) in your app
WEB-INF/classes dir

</li><li>In Resin in your app web.xml add these lines:

<def>
&lt;classpath id='WEB-INF/classes/orion.jar'/&gt;
&lt;classpath id='WEB-INF/classes/mail.jar'/&gt;
&lt;classpath id='WEB-INF/classes/ejb.jar'/&gt;
&lt;jndi-link&gt;
  &lt;jndi-name&gt;java:comp/env/ejb&lt;/jndi-name&gt;
  &lt;jndi-factory&gt;com.evermind.server.rmi.RMIInitialContextFactory
  &lt;/jndi-factory&gt;
  &lt;init-param java.naming.provider.url="ormi://myOrionHost/MyApp"/&gt;
  &lt;init-param java.naming.security.principal="admin"/&gt;
  &lt;init-param java.naming.security.credentials="xxx"/&gt;
&lt;/jndi-link&gt;
</def>

</li><li>Write your servlet/JSP as you would in Orion so for example if you have a
SessionBean called MyBean (in your ejb-jar.xml) your lookup should use this
string ("java:comp/env/ejb/MyBean")

</li><li>It's all
</li></ol>
</s1>
  </body>
</document>
