/*
 * Generated by Resin-3.0.s040908 (built Thu, 09 Sep 2004 02:24:43 PDT)
 */

package example;

public class Course__ResinExt extends example.Course implements com.caucho.amber.entity.Entity {
  /*
   * Generated by Resin Amber
   * 3.0.s040908
   */
  private static final java.util.logging.Logger __caucho_log = java.util.logging.Logger.getLogger("example.Course");

  protected transient com.caucho.amber.type.EntityType __caucho_home;
  public transient com.caucho.amber.entity.EntityItem __caucho_item;
  protected transient com.caucho.amber.connection.AmberConnectionImpl __caucho_session;
  protected transient int __caucho_state;
  protected transient long __caucho_loadMask;
  protected transient long __caucho_dirtyMask;
  protected transient long __caucho_updateMask;

  public void __caucho_setPrimaryKey(Object key)
  {
    setId(((Number) key).intValue());
  }

  public Object __caucho_getPrimaryKey()
  {
    return new Integer(getId());
  }

  public void __caucho_setConnection(com.caucho.amber.connection.AmberConnectionImpl aConn)
  {
    __caucho_session = aConn;
  }

  public void __caucho_expire()
  {
    __caucho_loadMask = 0L;
  }

  public com.caucho.amber.type.EntityType __caucho_getEntityType()
  {
    return __caucho_home;
  }

  public boolean __caucho_match(Class cl, Object key)
  {
    if (! (example.Course.class.isAssignableFrom(cl)))
      return false;
    else {
      return ((getId() == ((Number) key).intValue()));
    }
  }

  public final java.lang.String __caucho_super_get_name()
  {
    return super.getName();
  }

  public java.lang.String getName()
  {
    if (__caucho_session != null)
      __caucho_load_0(__caucho_session);

    return __caucho_super_get_name();
  }

  public final void __caucho_super_set_name(java.lang.String v)
  {
    super.setName(v);
  }

  public void setName(java.lang.String v)
  {
    java.lang.String oldValue = __caucho_super_get_name();
    if ((oldValue == v || v != null && v.equals(oldValue)) && (__caucho_loadMask & 1L) != 0L)
      return;
    __caucho_super_set_name(v);

    long oldMask = __caucho_dirtyMask;
    __caucho_dirtyMask |= 1L;

    if (__caucho_session != null && oldMask == 0)
      __caucho_session.update(this);
  }

  public final java.lang.String __caucho_super_get_teacher()
  {
    return super.getTeacher();
  }

  public java.lang.String getTeacher()
  {
    if (__caucho_session != null)
      __caucho_load_0(__caucho_session);

    return __caucho_super_get_teacher();
  }

  public final void __caucho_super_set_teacher(java.lang.String v)
  {
    super.setTeacher(v);
  }

  public void setTeacher(java.lang.String v)
  {
    java.lang.String oldValue = __caucho_super_get_teacher();
    if ((oldValue == v || v != null && v.equals(oldValue)) && (__caucho_loadMask & 1L) != 0L)
      return;
    __caucho_super_set_teacher(v);

    long oldMask = __caucho_dirtyMask;
    __caucho_dirtyMask |= 2L;

    if (__caucho_session != null && oldMask == 0)
      __caucho_session.update(this);
  }

  public boolean __caucho_makePersistent(com.caucho.amber.connection.AmberConnectionImpl aConn, com.caucho.amber.type.EntityType home)
    throws java.sql.SQLException
  {
    __caucho_session = aConn;
    if (home != null)
      __caucho_home = home;
    __caucho_state = com.caucho.amber.entity.Entity.P_NON_TRANSACTIONAL;
    __caucho_loadMask = 0L;
    __caucho_dirtyMask = 0L;
    __caucho_updateMask = 0L;

    return true;
  }

  public void __caucho_retrieve(com.caucho.amber.connection.AmberConnectionImpl aConn)
    throws java.sql.SQLException
  {
    __caucho_load_0(aConn);
  }

  protected void __caucho_load_0(com.caucho.amber.connection.AmberConnectionImpl aConn)
  {
    if (aConn.isInTransaction()) {
      if (com.caucho.amber.entity.Entity.P_DELETING <= __caucho_state) {
        return;
      }
      else if (__caucho_state < com.caucho.amber.entity.Entity.P_TRANSACTIONAL) {
        __caucho_state = com.caucho.amber.entity.Entity.P_TRANSACTIONAL;
        __caucho_loadMask = 0;
        __caucho_dirtyMask = 0;
        aConn.makeTransactional(this);
      }
      else if ((__caucho_loadMask & 1L) != 0)
        return;
    }
    else if ((__caucho_loadMask & 1L) != 0)
      return;
    else if (__caucho_item != null) {
      example.Course__ResinExt item = (example.Course__ResinExt) __caucho_item.getEntity();
      item.__caucho_load_0(aConn);
      __caucho_super_set_name(item.getName());
      __caucho_super_set_teacher(item.getTeacher());
      __caucho_loadMask |= 1L;

      return;
    }

    try {
      String sql = "SELECT o.name, o.teacher FROM amber_basic_courses o WHERE o.id=?";

      java.sql.PreparedStatement pstmt = aConn.prepareStatement(sql);
      int index = 1;
      pstmt.setInt(index++, getId());

      java.sql.ResultSet rs = pstmt.executeQuery();
      if (rs.next()) {
        java.lang.String amber_ld1 = rs.getString( + 1);
        __caucho_super_set_name(amber_ld1);
        java.lang.String amber_ld2 = rs.getString( + 2);
        __caucho_super_set_teacher(amber_ld2);
        __caucho_loadMask |= 1L;
      }
      else {
        rs.close();
        throw new com.caucho.amber.AmberObjectNotFoundException(("amber load: no matching object example.Course[" + __caucho_getPrimaryKey() + "]"));
      }
    } catch (RuntimeException e) {
      throw e;
    } catch (Exception e) {
      throw new com.caucho.amber.AmberRuntimeException(e);
    }
  }

  public void __caucho_load(com.caucho.amber.connection.AmberConnectionImpl aConn, java.sql.ResultSet rs, int index)
    throws java.sql.SQLException
  {
    java.lang.String amber_ld0 = rs.getString(index + 0);
    __caucho_super_set_name(amber_ld0);
    java.lang.String amber_ld1 = rs.getString(index + 1);
    __caucho_super_set_teacher(amber_ld1);
    __caucho_loadMask |= 1L;
    __caucho_dirtyMask = 0;
    __caucho_updateMask = 0;

    if (__caucho_item == null) {
    }
    else if (__caucho_state == com.caucho.amber.entity.Entity.P_TRANSACTIONAL || __caucho_state == com.caucho.amber.entity.Entity.P_NEW) {
    }
    else if (! __caucho_session.isInTransaction()) {
      __caucho_state = com.caucho.amber.entity.Entity.P_NON_TRANSACTIONAL;
      __caucho_item.save(this);
    }
    else {
      __caucho_state = com.caucho.amber.entity.Entity.P_TRANSACTIONAL;
      aConn.makeTransactional(this);
    }
  }

  public void __caucho_setKey(java.sql.PreparedStatement pstmt, int index)
    throws java.sql.SQLException
  {
    pstmt.setInt(index++, getId());
  }

  public com.caucho.amber.entity.Entity __caucho_copy(com.caucho.amber.connection.AmberConnectionImpl aConn,
                                                      com.caucho.amber.entity.EntityItem item)
  {
    example.Course__ResinExt o = new example.Course__ResinExt();
    o.__caucho_home = __caucho_home;
    o.__caucho_item = item;
    o.setId(getId());
    o.setName(__caucho_super_get_name());
    o.setTeacher(__caucho_super_get_teacher());
    o.__caucho_session = aConn;
    o.__caucho_state = com.caucho.amber.entity.Entity.P_NON_TRANSACTIONAL;
    o.__caucho_loadMask = __caucho_loadMask & 1L;

    return o;
  }

  public void __caucho_makePersistent(com.caucho.amber.connection.AmberConnectionImpl aConn,
                                      com.caucho.amber.entity.EntityItem item)
  {
    example.Course__ResinExt entity = (example.Course__ResinExt) item.getEntity();
    __caucho_home = entity.__caucho_home;
    if (__caucho_home == null) throw new NullPointerException();
    __caucho_item = item;
    setId(entity.getId());
    __caucho_session = aConn;
    __caucho_state = com.caucho.amber.entity.Entity.P_NON_TRANSACTIONAL;
  }

  public boolean __caucho_create(com.caucho.amber.connection.AmberConnectionImpl aConn, com.caucho.amber.type.EntityType home)
    throws java.sql.SQLException
  {
    if (__caucho_session != null)
      throw new com.caucho.amber.AmberException("object " + this + " is already persistent.");
    __caucho_state = com.caucho.amber.entity.Entity.P_NEW;
    __caucho_loadMask = -1L;
    __caucho_dirtyMask = 0L;
    String sql = "INSERT INTO amber_basic_courses (id, name, teacher) VALUES (?, ?, ?)";
    java.sql.PreparedStatement pstmt = aConn.prepareInsertStatement(sql);
    int index = 1;

    if ((getId() == 0)) {
      pstmt.setNull(index++, java.sql.Types.INTEGER);
    } else {
      pstmt.setInt(index++, getId());
    }
    pstmt.setString(index++, __caucho_super_get_name());
    pstmt.setString(index++, __caucho_super_get_teacher());

    pstmt.executeUpdate();

    if ((getId() == 0)) {
      java.sql.ResultSet __caucho_rs_0 = pstmt.getGeneratedKeys();
      if (__caucho_rs_0.next()) {
        int v1 = __caucho_rs_0.getInt( + 1);
        setId(v1);
        if (__caucho_log.isLoggable(java.util.logging.Level.FINER))
          __caucho_log.finer("create with new primaryKey " + getId());
      }
      else throw new java.sql.SQLException();
    }

    __caucho_session = aConn;
    __caucho_home = home;
    __caucho_item = new com.caucho.amber.entity.CacheableEntityItem(home.getHome(), new example.Course__ResinExt());
    example.Course__ResinExt entity = (example.Course__ResinExt) __caucho_item.getEntity();
    entity.__caucho_home = home;
    entity.setId(getId());
    entity.setName(__caucho_super_get_name());
    entity.__caucho_loadMask = -1L;

    return false;
  }

  public void __caucho_delete()
  {
    if (__caucho_state >= com.caucho.amber.entity.Entity.P_DELETING)
      return;
    __caucho_state = com.caucho.amber.entity.Entity.P_DELETING;
    if (__caucho_session != null) {
      __caucho_session.update(this);
      __caucho_home.getTable().beforeEntityDelete(__caucho_session, this);
      __caucho_state = com.caucho.amber.entity.Entity.P_DELETED;
    }
    else
      __caucho_state = com.caucho.amber.entity.Entity.P_DELETED;
  }

  private void __caucho_delete_int()
    throws java.sql.SQLException
  {
    __caucho_home.delete(__caucho_session, new Integer(this.getId()));
    String sql = "DELETE FROM amber_basic_courses WHERE id=?";

    java.sql.PreparedStatement pstmt = __caucho_session.prepareStatement(sql);
    int index = 1;
    pstmt.setInt(index++, this.getId());

    pstmt.executeUpdate();
  }

  public void __caucho_invalidate_foreign(String table, Object key)
  {
  }

  public boolean __caucho_flush()
    throws java.sql.SQLException
  {
    if (__caucho_state == com.caucho.amber.entity.Entity.P_DELETED) {
      __caucho_delete_int();
      return true;
    }

    long mask = __caucho_dirtyMask;
    __caucho_dirtyMask = 0L;
    __caucho_updateMask |= mask;

    if (mask == 0L)
      return true;
    __caucho_flushUpdate(mask, __caucho_home);
    return false;
  }

  protected void __caucho_flushUpdate(long mask, com.caucho.amber.type.EntityType home)
    throws java.sql.SQLException
  {
    String sql = home.generateUpdateSQL(mask);
    if (sql != null) {
      java.sql.PreparedStatement pstmt = __caucho_session.prepareStatement(sql);
      int index = 1;

      if ((mask & 1L) != 0) {
        pstmt.setString(index++, __caucho_super_get_name());
      }

      if ((mask & 2L) != 0) {
        pstmt.setString(index++, __caucho_super_get_teacher());
      }

      pstmt.setInt(index++, getId());

      pstmt.executeUpdate();
    }
  }

  public void __caucho_afterCommit()
  {
    int state = __caucho_state;
    __caucho_state = com.caucho.amber.entity.Entity.P_NON_TRANSACTIONAL;
    long updateMask = __caucho_updateMask;
    __caucho_updateMask = 0L;
    if (updateMask != 0L)
      __caucho_session.update(this);
    if (__caucho_item != null) {
      example.Course__ResinExt item = (example.Course__ResinExt) __caucho_item.getEntity();
      if ((__caucho_loadMask & 1L) != 0) {
        item.__caucho_loadMask = 1L;
        item.setName(__caucho_super_get_name());
        item.setTeacher(__caucho_super_get_teacher());
      }
      if ((updateMask & 1L) != 0) {
        item.setName(__caucho_super_get_name());
      }
      if ((updateMask & 2L) != 0) {
        item.setTeacher(__caucho_super_get_teacher());
      }
    }
  }

  public void __caucho_afterRollback()
  {
    __caucho_state = com.caucho.amber.entity.Entity.P_NON_TRANSACTIONAL;
    __caucho_loadMask = 0L;
    __caucho_dirtyMask = 0L;
  }

  public com.caucho.amber.entity.EntityItem __caucho_home_find(com.caucho.amber.connection.AmberConnectionImpl aConn,com.caucho.amber.entity.AmberEntityHome home,java.sql.ResultSet rs, int index)
    throws java.sql.SQLException
  {
    Object key = com.caucho.amber.type.PrimitiveIntType.toForeignInt(rs.getInt(index + 0), rs.wasNull());
    return home.findEntityItem(aConn, key, false);
  }

  public com.caucho.amber.entity.Entity __caucho_home_new(com.caucho.amber.connection.AmberConnectionImpl aConn,com.caucho.amber.entity.AmberEntityHome home,Object key)  throws java.sql.SQLException
  {
    example.Course__ResinExt entity = new example.Course__ResinExt();
    entity.__caucho_home = home.getEntityType();
    entity.__caucho_setPrimaryKey(key);
    return entity;
  }
}
