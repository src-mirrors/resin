<document>
  <header>
    <product>resin</product>
    <version>Resin 4.0</version>
    <title>Resin Installation Quick Start</title>

    <description>
<p>You can start using Resin by simply expanding the archive, and
starting Resin with a Java command line.</p>
    </description>
  </header>

  <body>
    <localtoc/>

<s1 title="Preconditions">

<p>Resin 4.0 needs Java before it can run.  It needs JDK 1.6 or a later JDK.</p>

<p>Sun's JDK for Windows, Solaris, and Linux can be found at
<a href="http://java.sun.com">http://java.sun.com</a>.  Sun also has
links to some other ports of the JDK.</p>

</s1>

<s1 title="Resin Web Server">

<p>The easiest and fastest Resin configuration uses the Resin as the primary or
only web server.  This configuration provides a Java HTTP server. We recommend
you start with this before trying any other configuration.</p>

<figure src="httpd.gif" alt="browser <-> Resin httpd/servlets,beans <- html,jsp"/>

<p>The server listens at port 8080 in the default configuration and
can be changed to the HTTP port 80 during deployment.</p>

<p>For more details, see the <a href="http-server.xtp">Resin Web Server</a>
configuration page.</p>

</s1>

<s1 name="quickstart" title="Basic Installation">

<p>The Resin web server starts  listening to HTTP requests on port 8080 and 
listens on port 6800 for <a href="clustering-overview.xtp">load balancer</a>
and cluster messages.  Resin can then be used for development or evaluation.  
The steps are:</p>

<s2 title="Windows">

<ol>
<li>Install JDK 1.6 or later.</li>
<li>Check that the environment variable <var>JAVA_HOME</var> is set to the JDK 
location, e.g. <code>c:\java\jdk1.6.0_14</code></li>
<li>Unzip resin-4.0.x.zip</li>
<li>Define the environment variable <var>RESIN_HOME</var> to the location of
Resin, for example <code>c:\resin-4.0.x</code></li>
<li>Execute <code>resin.exe</code></li>
<li>Browse to <a href="http://localhost:8080">http://localhost:8080</a></li>
</ol>
</s2>

<s2 title="Unix, Linux, and Mac OS X">

<ol>
<li>Install JDK 1.6 or later and link /usr/java to the Java home or define the 
environment variable <var>JAVA_HOME</var>.</li>
<li><code>tar -vzxf resin-4.0.x.tar.gz</code></li>
<li><code>cd resin-4.0.x</code></li>
<li><code>./configure --prefix=`pwd`</code>
  <ul><li>some <a href="starting-resin-command-line.xtp">./configure options</a> are available</li></ul>
</li>
<li><code>make</code></li>
<li><code>make install</code></li>
<li>Execute <code>bin/resin.sh console</code>
  <ul><li>Or run <code>java -jar lib/resin.jar console</code></li></ul>
</li>
<li>Browse to <a href="http://localhost:8080">http://localhost:8080</a></li>
</ol>

</s2>

<s2 title="Debian Unix apt-get">
<p>
We provide a Debian packaged version of Resin that Debian and Ubuntu
users can take advantage of.  It performs all of the installation
steps above for you and creates all the recommended server and
content directories.  Simply download from the <a
href="http://caucho.com/download">Resin download page</a> and install
using dpkg.
</p>
<p>
Alternatively, you can add Caucho's Debian repository to your system's
repositories to use automated update tools like Synaptic and apt-get.
To do this, add the following line to your <var>/etc/apt/sources.list</var>
</p>
<example>
deb http://caucho.com/download/debian unstable multiverse
</example>
<p>
After adding this line, update your local repository cache by running:
</p>
<example>
apt-get update
</example>
<p>
Finally, install Resin Professional using the following:
</p>
<example>
apt-get install resin-pro
</example>
<p>
If you have a license file for Resin, save it in <var>/usr/local/resin/licenses</var>
</p>
<p>
Or install Resin Open Source with this command:
</p>
<example>
apt-get install resin
</example>

</s2>
</s1>

<s1 title="Adding Content">

<p>Once you've made sure Resin is working, you'll want to add some content
to the default web site:</p>

<ol>
<li>Add .war files like <code>resin-4.0.x/webapps/hello.war</code>.

<ul><li>The URL in your browser is
<a href="http://localhost:8080/hello">http://localhost:8080/hello</a></li>
</ul></li>

<li>Command-line .war deployment like <code>bin/resin.sh deploy hello.war</code>.

<ul><li>The URL in your browser is
<a href="http://localhost:8080/hello">http://localhost:8080/hello</a></li>
</ul></li>

<li>Create web-apps directly like <code>resin-4.0.x/webapps/hello/index.php</code>

The URL in your browser is <a href="http://localhost:8080/hello">http://localhost:8080/hello</a>.
<ul><li>
Create a file <code>resin-4.0.x/webapps/hello/WEB-INF/web.xml</code> to
configure the 'hello' web application.</li>
</ul></li>
</ol>

<p>More deployment information is available in the
<a href="deploy.xtp">deployment documentation</a>.</p>

</s1>

<s1 title="Running Resin as a daemon">

<p>In a deployment environment, Resin will run as a background daemon.
The previous steps ran Resin in the foreground, which is convenient
for development since the logging output goes to the console.
When running as a daemon, Resin detaches from the console and continues
running until told to stop.</p>

<ol>
<li>Start resin with <code>bin/resin.sh start</code></li>
<li>Stop resin with <code>bin/resin.sh stop</code></li>
<li>Restart resin with <code>bin/resin.sh restart</code></li>
</ol>

</s1>

<s1 title="More Installation Options">

<p>More installation options and configuration are available at
<a href="install.xtp">installation options</a>.</p>

</s1>

</body>
</document>
