/*
 * Copyright (c) 1998-2006 Caucho Technology -- all rights reserved
 *
 * This file is part of Resin(R) Open Source
 *
 * Each copy or derived work must preserve the copyright notice and this
 * notice unmodified.
 *
 * Resin Open Source is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * Resin Open Source is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE, or any warranty
 * of NON-INFRINGEMENT.  See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License
 * along with Resin Open Source; if not, write to the
 *   Free SoftwareFoundation, Inc.
 *   59 Temple Place, Suite 330
 *   Boston, MA 02111-1307  USA
 *
 * @author Sam
 */


package com.caucho.mbeans.j2ee;

/**
 * Base class interface for every notification generated by a managed object.
 *
 * {@link #getSource()} returns the ObjectName of the source of the event.
 * {@link #getType()} is one of the types defined in (@link EventTypes}.
 */
public class Notification
  extends javax.management.Notification
{
  private static Object getObjectName(J2EEManagedObject source)
  {
    // XXX: spec, page 45, seems to state that the source s/b an ObjectName,
    // not a String, but that contradicts the indication that it should be a
    // String (because OBJECT_NAME is supposed to be a string)
    return source.getObjectName();
  }

  public Notification(String type, J2EEManagedObject source, long sequenceNumber)
  {
    super(type, getObjectName(source), sequenceNumber);
  }

  public Notification(String type,
                      J2EEManagedObject source,
                      long sequenceNumber,
                      String message)
  {
    super(type, getObjectName(source), sequenceNumber, message);
  }

  public Notification(String type,
                      J2EEManagedObject source,
                      long sequenceNumber,
                      long timeStamp)
  {
    super(type, getObjectName(source), sequenceNumber, timeStamp);
  }

  public Notification(String type,
                      J2EEManagedObject source,
                      long sequenceNumber,
                      long timeStamp, String message)
  {
    super(type, getObjectName(source), sequenceNumber, timeStamp, message);
  }
}
