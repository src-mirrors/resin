<?php

header("Content-Type: text/plain; charset=utf-8");

mbean_init();

$id = $g_server->Id;

if (! $id)
  $id = "default";
  
$os = $g_mbean_server->lookup("java.lang:type=OperatingSystem");
$thread = $g_mbean_server->lookup("resin:type=ThreadPool");
$jvm_thread = $g_mbean_server->lookup("java.lang:type=Threading");

printf("ServerId: %s\n", $id);
printf("ServerIndex: %02d\n", $g_server->ClusterIndex);
printf("HeapFree: %d\n", $g_server->RuntimeMemoryFree);
printf("HeapTotal: %d\n", $g_server->RuntimeMemory);
printf("FileDescriptors: %d\n", $os->OpenFileDescriptorCount);

printf("ThreadCount: %d\n", $thread->ThreadCount);
printf("ThreadActive: %d\n", $thread->ThreadActiveCount);
printf("ThreadIdle: %d\n", $thread->ThreadIdleCount);
printf("JvmThreadCount: %d\n", $jvm_thread->ThreadCount);
printf("JvmPeakThreadCount: %d\n", $jvm_thread->PeakThreadCount);

$thread_ids = $jvm_thread->AllThreadIds;

sort($thread_ids);
$scoreboard = "";

foreach ($thread_ids as $id) {
  $info = $jvm_thread->getThreadInfo($id, 50);
  $conn = $g_server->findConnectionByThreadId($id);

  $code = "?";
  
  if (! $info) {
    $scoreboard .= "?";
    continue;
  }

  $stack = $info->stackTrace[0];

  if ($stack != null 
      && ($stack->methodName == "accept"
          || $stack->methodName == "socketAccept")) {
    $code = "a";
  }
  else if ($info->isInNative()) {
    $code = "n";
  }
  else if ($info->getThreadState() == "WAITING"
          || $info->getThreadState() == "TIMED_WAITING") {
    $code = ".";
  }
  else if ($info->getThreadState() == "BLOCKED") {
    $code = "B";
  }
  else if ($conn != null) {
    if ($conn->getRequestActiveTime() < 1000)
      $code = "r";
    else
      $code = "R";
  }
  else if ($stack) {
    $code = "X";
  }
  else {
    $code = "x";
  }
      
  $scoreboard .= $code;
}

echo "Scoreboard: ". $scoreboard . "\n";


