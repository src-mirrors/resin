<?php

$cache = resin_create_distcache("resin:admin:graph");

$p_hash = $_REQUEST['h'];

$p_submit = $_REQUEST['submit'];
$p_graph = $_REQUEST['graph'];
$p_period = $_REQUEST['p'];
if ($_REQUEST['period'])
  $p_period = $_REQUEST['period'];
if ($_REQUEST['np'])
  $p_period = $_REQUEST['np'];

$p_servers = explode(" ", htmlspecialchars($_REQUEST['server-set']));

$user = quercus_servlet_request()->getRemoteUser();

$user_item = $cache->get($user);
$is_refresh = false;

if ($p_graph) {
  $p_hash = $user_item['user-graphs'][$p_graph];
  $p_submit = null;

  if ($_POST['remove']) {
    unset($user_item['user-graphs'][$p_graph]);
    $cache->put($user, $user_item);
  }

  $is_refresh = true;
}

if ($p_hash && ! $p_submit) {
  $item = $cache->get($p_hash);
  $p_name = $item['name'];
  $p_checks = $item['checks'];
}
else if ($p_submit) {
  $is_refresh = true;

  $p_name = $_REQUEST['name'];
  $p_checks = $_REQUEST['checks'];

  $item = array("name"=>$p_name,
                "checks"=>$p_checks);

  $ser = serialize($item);
  $p_hash = dechex(crc32($ser));

  $cache->put($p_hash, $item);

  if ($p_submit) {
    $user_graphs = $user_item['user-graphs'];
    if ($user_graphs == null) {
      $user_graphs = array();
    }

    $user_graphs[$p_name] = $p_hash;
    $user_item['user-graphs'] = $user_graphs;

    $cache->put($user, $user_item);
  }
}

$query = "&h=" . $p_hash . "&p=" . $p_period;

require_once "WEB-INF/php/inc.php";

if (! admin_init($query, false)) {
  return;
}

$names = array();

$full_height = 500;
$full_width = 600;

$mbean_server = $g_mbean_server;

if (! $p_period) {
  $p_period = 60;
}

$self_index = sprintf("%02d", $g_server->SelfServer->ClusterIndex);

if ($p_servers == null) {
  $p_servers = array($self_index);
}

foreach ($p_checks as $check) {
  foreach ($p_servers as $server) {
    $p_names[] = "$server|$check";
  }
}

if (! $p_name)
  $p_name = $p_names[0];

echo "<div id='canvas-warning'><p><b>Note:</b> this page requires HTML 5 
canvas support.  You may need to use Firefox 3.5 or other HTML 5-capable browser
to see the graphs properly.</p></div>\n";

$user_graphs = $user_item['user-graphs'];

echo "<div id='graph-content' style='display:none'>\n";

echo '<div id="new-graph-drawer">';
echo '<div id="new-graph-form">';
display_new_graph_form();
echo '</div>';
echo '</div>';

echo '<div style="float: left; width: %40;">';
display_main_graph();
echo '</div>';
echo "</div>";

display_footer($g_page, javascript_main_graph());

function display_graph_selection()
{
  global $p_hash;
  global $user_item;
  global $g_next_url;
  global $g_server;
  global $self_index;

  echo "<form name='def_graph' method='POST' action='" . $g_next_url . "'>";
  echo "<b>Meter Set:</b>\n";
  echo "<select name='graph' onchange='javascript:document.forms.def_graph.submit();'>\n";

  $selected = false;
  foreach ($user_item['user-graphs'] as $name => $hash) {
    echo "<option ";
    if ($p_hash == $hash) {
      $selected = true;
      echo " selected";
    }
    echo " value='{$name}'>{$name}</option>\n";
  }
  if (! $selected)
    echo "<option selected>--------</option>\n";

  echo "</select>\n";

  $cluster_size = count($g_server->Cluster->Servers);

  echo "<b>Server Set:</b>\n";
  echo "<select name='server-set'>\n";

  echo "<option value='$self_index'";

  if ($_REQUEST['server-set'] == $self_index)
    echo " selected";

  echo ">This Server</option>\n";

  for ($i = 0; $i < min(3, $cluster_size); $i++) {
    $triad .= sprintf("%02d ", $i);
  }

  $triad = trim($triad);

  echo "<option value='$triad'";

  if ($_REQUEST['server-set'] == $triad)
    echo " selected";

  echo ">Triad</option>\n";

  if ($cluster_size > 3) {
    for ($i = 3; $i < $cluster_size; $i++) {
      $non_triad .= sprintf("%02d ", $i);
    }

    $non_triad = trim($non_triad);

    echo "<option value='$non_triad'";

    if ($_REQUEST['server-set'] == $non_triad)
      echo " selected";

    echo ">Non-triad servers</option>\n";
  }

  for ($i = 0; $i < $cluster_size; $i++) {
    $all .= sprintf("%02d ", $i);
  }

  $all = trim($all);

  echo "<option value='$all'";

  if ($_REQUEST['server-set'] == $all)
    echo " selected";

  echo ">All servers in cluster</option>\n";

  echo "</select>\n";
  echo "</form>";
}

function display_period_selection()
{
  global $p_period;
  global $g_next_url;

  echo "<div class='graph-period'>";

  echo "Time: "

  if ($p_period == 60)
    echo " 1h";
  else
    echo " <a href=" . $g_next_url . "&np=" . (60) . ">1h</a>";

  if ($p_period == 6 * 60)
    echo " 6h";
  else
    echo " <a href=" . $g_next_url . "&np=" . (6 * 60) . ">6h</a>";

  if ($p_period == 24 * 60)
    echo " 24h";
  else
    echo " <a href=" . $g_next_url . "&np=" . (24 * 60) . ">24h</a>";

  if ($p_period == 7 * 24 * 60)
    echo " 7d";
  else
    echo " <a href=" . $g_next_url . "&np=" . (7 * 24 * 60) . ">7d</a>";

  if ($p_period == 30 * 24 * 60)
    echo " 30d";
  else
    echo " <a href=" . $g_next_url . "&np=" . (30 * 24 * 60) . ">30d</a>";

  echo "</div>";
}

function display_main_graph() 
{
  global $g_next_url;
  global $p_name;
  global $p_graph;
  global $p_hash;
  global $p_period;

  echo "<div class='graph'></div>";

  display_period_selection();

  if ($p_graph) {
    $rest_url = "rest.php?q=graph&graph={$p_graph}&period={$p_period}";

    echo "<div><a href='{$rest_url}'>Embedded graph URL</a></div>";
  }
  elseif ($p_hash) {
    $rest_url = "rest.php?q=graph&hash={$p_hash}&period={$p_period}";

    echo "<div><a href='{$rest_url}'>Embedded graph URL</a></div>";
  }

  echo "<br>";
}

function display_new_graph_form() 
{
  global $p_period;
  global $p_hash;
  global $p_graph;
  global $p_names;
  global $g_next_url;
  global $g_mbean_server;

  display_graph_selection();

  $stat = $g_mbean_server->lookup("resin:type=StatService");

  if (! $stat)
    return;

  $full_names = $stat->statisticsNames();

  $names = array();
  $servers = array();
  foreach ($full_names as $name) {
    $values = preg_split('/[|]/', $name);

    $server = array_shift($values);

    if (! in_array($server, $servers)) {
      $servers[] = $server;
    }
    
    $section_array = null;
    $section_array[] = array_shift($values);
    $section_array[] = array_shift($values);

    $section = join($section_array, '|');

    $name = join($values, '|');

    $names = $sections[$section];
    if (! in_array($name, $names))
      $names[] = $name;
    $sections[$section] = $names;
  }

  // server
  echo "<form method='post' action='" . $g_next_url . "'>"
  echo "<input type='hidden' name='submit' value='true'>\n";
  echo "<h2>Meters<span id='meter-switch' class='switch'></span></h2>";
  echo "<button id='show-selected-meters' style='margin: 0 1em'>Show Selected Meters</button>";
  echo "<button id='clear-selected-meters' style='margin: 0 1em'>Clear Graph</button>";

  $i = 0;

  ksort($sections);
  echo "<ul class='meters'>"
  foreach ($sections as $section => $names) {
    $i++;
    echo "<li>";
    
    $section_id = "meter-" . crc32($section);
    echo "<span class='switch' id='$section_id'>$section</span>";

    sort($names);
    echo "<ul class='toggle-meter-switch toggle-$section_id'>";
    foreach ($names as $name) {
      echo "<li><input class='meter' type='checkbox' name='checks[]' ";

      $regexp = str_replace('|', '[|]', "/[0-9][0-9]|{$section}|{$name}/");

      if (preg_grep($regexp, $p_names)) {
        echo "checked ";
      }
        
      echo "value='$section|$name'>$name<br>\n";
    }
    echo "</ul>";
    echo "</li>";
  }
  echo "</ul>";

  echo "<div style='text-align: right'>\n";
  echo "<div id='validation-notice' class='ui-state-error ui-corner-all' style='display:none'></div>\n";
  echo "<input name='name' style='width: 100%;'></input>\n";
  echo "<input type='submit' value='Save Meter Set'><br>\n";
  echo "</div>\n";

  echo "</form>\n";
}

function javascript_main_graph()
{
  global $p_period;

  $width = 600 - 60;
  $height = 400 - 40;

  $javascript = <<<EOF

if (document.createElement('canvas').getContext) {
  $("div#canvas-warning").hide();
  $("div#graph-content").show();
}

function GraphManager() {
  var graphDiv = $('div.graph');

  var updateGraph = function(canvasHtml) {
    graphDiv.empty();
    graphDiv.append(canvasHtml);
  };

  var refresh = function() {
    /*
    var servers = $("input.server:checkbox:checked").map(function() {
      return $(this).attr("value");
    });*/

    var servers = $("select[name=server-set] option:selected")
                    .attr("value")
                    .split(" ");

    var checks = $("input.meter:checkbox:checked").map(function() {
      return $(this).attr("value");
    });

    $.post("rest.php?q=graph",
           { servers: servers,
             checks : checks,
             period : "${p_period}",
             width : "${width}",
             height : "${height}" },
           updateGraph,
           "text/html");
  };

  refresh();
  window.setInterval(refresh, 60000);

  $("input.meter:checkbox").change(refresh);
  $("select[name=server-set]").change(refresh);

  $("button#show-selected-meters").click(function() {
    var showParent = function() {
      var switchElement = $(this).closest("ul").siblings(".switch");
      switchElement.trigger("toggle-to-show");
    };

    $("input.meter:checkbox:checked").each(showParent);

    return false;
  });

  $("button#clear-selected-meters").click(function() {
    $("input.meter:checkbox:checked").each(function() {
      $(this).attr("checked", false);
      $(this).change();
    });
    
    return false;
  });

  var nameInput = $("input[name=name]");

  nameInput.attr("value", "Meter Set Name");
  nameInput.css("color", "#999");
  nameInput.focusin(function() {
    if (nameInput.attr("value") == "Meter Set Name") {
      nameInput.attr("value", "");
      nameInput.css("color", "black");
    }
  });

  nameInput.focusout(function() {
    if (nameInput.attr("value") == "") {
      nameInput.attr("value", "Meter Set Name");
      nameInput.css("color", "#999");
    }
  });

  var validationNotice = $("#validation-notice");
  nameInput.closest("form").submit( function() {
    var html = "";

    if ($("input.meter:checkbox:checked").length == 0) {
      html += "Please select at least one meter for this set<br/>";
    }

    if (nameInput.attr("value") == "Meter Set Name"
        || nameInput.attr("value") == "") {
      html += "Please input a name for this meter set<br/>";
    }

    if (html != "") {
      validationNotice.html(html);
      validationNotice.show();
      return false;
    }
  });
}

new GraphManager();

EOF;

  return $javascript;
}

?>
